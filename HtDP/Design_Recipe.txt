1.Problem Analysis


Identify the information that must be represented and how it is 
represented
in the chosen programming language. Formulate data 
definitions and 
illustrate them with examples.



2.Signature, Purpose Statement, Header


State which data the desired function consumes and produces. 
Articulate 
what the function computes as a concise one-line statement. 
Define a 
stub that lives up to the signature.



3.Functional Examples
Work through examples that illustrate the function’s purpose.



4.Function Template


Translate your data definitions into an outline of the function.



5.Function Definition


Fill in the gaps in the function template. Exploit the purpose 

statement and the examples.



6.Testing


Articulate the examples as tests and ensure that the function 
passes 
all. The tests will help your successor ensure that the 
function works
for these examples after future modifications.
